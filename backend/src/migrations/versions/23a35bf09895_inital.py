"""inital

Revision ID: 23a35bf09895
Revises:
Create Date: 2021-11-09 14:43:58.918385

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "23a35bf09895"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "books_tags",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("name"),
    )
    op.create_table(
        "languages",
        sa.Column("code", sa.String(length=3), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("native", sa.String(length=100), nullable=False),
        sa.PrimaryKeyConstraint("code"),
    )
    op.create_table(
        "titles",
        sa.Column("ident", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("ident"),
    )
    op.create_table(
        "titles_tags",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("name"),
    )
    op.create_table(
        "books",
        sa.Column("id", sa.CHAR(36), nullable=False),
        sa.Column("period", sa.Date(), nullable=False),
        sa.Column("counter", sa.JSON(), nullable=False),
        sa.Column("article_count", sa.Integer(), nullable=False),
        sa.Column("media_count", sa.Integer(), nullable=False),
        sa.Column("size", sa.Integer(), nullable=False),
        sa.Column("url", sa.String(length=2083), nullable=False),
        sa.Column("zimcheck", sa.JSON(), nullable=False),
        sa.Column("obsolete", sa.Boolean(), nullable=True),
        sa.Column("title", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(
            ["title"], ["titles.ident"], name="fk_books_titles_ident_title"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "titles_booktags",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("booktag", sa.String(length=255), nullable=True),
        sa.Column("title", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(
            ["booktag"],
            ["books_tags.name"],
            name="fk_titles_booktags_books_tags_booktag_name",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["title"],
            ["titles.ident"],
            name="fk_titles_booktags_titles_title_ident",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "titles_languages",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("language", sa.String(length=3), nullable=True),
        sa.Column("title", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(
            ["language"],
            ["languages.code"],
            name="fk_titles_languages_languages_language_code",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["title"],
            ["titles.ident"],
            name="fk_titles_languages_titles_title_ident",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "titles_metadata",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=2048), nullable=False),
        sa.Column("kind", sa.String(length=50), nullable=False),
        sa.Column("value", sa.String(length=2048), nullable=True),
        sa.Column("bin_value", sa.LargeBinary(length=2097152), nullable=True),
        sa.Column("title", sa.String(length=255), nullable=True),
        sa.ForeignKeyConstraint(
            ["title"], ["titles.ident"], name="fk_titles_metadata_titles_ident_title"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "title", name="uc_titles_metadata_name_title"),
    )
    op.create_table(
        "books_booktags",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("booktag", sa.String(length=255), nullable=True),
        sa.Column("book", sa.CHAR(36), nullable=True),
        sa.ForeignKeyConstraint(
            ["book"],
            ["books.id"],
            name="fk_books_booktags_books_book_id",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["booktag"],
            ["books_tags.name"],
            name="fk_books_booktags_books_tags_booktag_name",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "books_languages",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("language", sa.String(length=3), nullable=True),
        sa.Column("book", sa.CHAR(36), nullable=True),
        sa.ForeignKeyConstraint(
            ["book"],
            ["books.id"],
            name="fk_books_languages_books_book_id",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["language"],
            ["languages.code"],
            name="fk_books_languages_languages_language_code",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "books_metadata",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=2048), nullable=False),
        sa.Column("kind", sa.String(length=50), nullable=False),
        sa.Column("value", sa.String(length=2048), nullable=True),
        sa.Column("bin_value", sa.LargeBinary(length=2097152), nullable=True),
        sa.Column("book", sa.CHAR(36), nullable=True),
        sa.ForeignKeyConstraint(
            ["book"], ["books.id"], name="fk_books_metadata_books_id_book"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "book", name="uc_books_metadata_name_book"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("books_metadata")
    op.drop_table("books_languages")
    op.drop_table("books_booktags")
    op.drop_table("titles_metadata")
    op.drop_table("titles_languages")
    op.drop_table("titles_booktags")
    op.drop_table("books")
    op.drop_table("titles_tags")
    op.drop_table("titles")
    op.drop_table("languages")
    op.drop_table("books_tags")
    # ### end Alembic commands ###
